/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { PolyChat, PolyChatInterface } from "../PolyChat";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_recepient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "Message",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_messagingFee",
        type: "uint256",
      },
    ],
    name: "NewGlobalMessagingFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_messagingFee",
        type: "uint256",
      },
    ],
    name: "NewMessagingFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "bytes",
        name: "_publicKey",
        type: "bytes",
      },
    ],
    name: "NewPublicKey",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "fromAccount",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_messagingFee",
        type: "uint256",
      },
    ],
    name: "NewWhitelistMessagingFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "globalMessagingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "messagingFeeFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    name: "messagingFeeSenders",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "publicKeyOf",
    outputs: [
      {
        internalType: "bytes",
        name: "",
        type: "bytes",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
      {
        internalType: "address payable",
        name: "_address",
        type: "address",
      },
    ],
    name: "sendMessageTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newMessagingFee",
        type: "uint256",
      },
    ],
    name: "setGlobalMessagingFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "setMessagingFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "bytes",
        name: "_public_key",
        type: "bytes",
      },
    ],
    name: "setPublicKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "setWhiteListFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address payable",
        name: "_address",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
    ],
    name: "withdraw",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5062000032620000266200008160201b60201c565b6200008960201b60201c565b66038d7ea4c680006006819055507fd7c08c2194819919a906430c0b9c664bcb98605dbdd65eb6a4f980193c25794b60065460405162000073919062000168565b60405180910390a162000185565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000819050919050565b62000162816200014d565b82525050565b60006020820190506200017f600083018462000157565b92915050565b6119a180620001956000396000f3fe6080604052600436106100c25760003560e01c80636ef1b0741161007f5780638da5cb5b116100595780638da5cb5b14610257578063a91d58b414610282578063f2fde38b146102ab578063f3fef3a3146102d4576100c2565b80636ef1b074146101d8578063715018a61461021557806387f977df1461022c576100c2565b806303fd22b6146100c757806329f8155a146101045780634c3973091461012d5780635be94a70146101565780635e8af8d21461017f57806364513e2f146101bc575b600080fd5b3480156100d357600080fd5b506100ee60048036038101906100e99190611089565b6102fd565b6040516100fb91906110cf565b60405180910390f35b34801561011057600080fd5b5061012b60048036038101906101269190611116565b6104bb565b005b34801561013957600080fd5b50610154600480360381019061014f9190611116565b610550565b005b34801561016257600080fd5b5061017d60048036038101906101789190611143565b610599565b005b34801561018b57600080fd5b506101a660048036038101906101a19190611089565b61070e565b6040516101b3919061121c565b60405180910390f35b6101d660048036038101906101d191906113b1565b6107df565b005b3480156101e457600080fd5b506101ff60048036038101906101fa9190611143565b610c19565b60405161020c919061141c565b60405180910390f35b34801561022157600080fd5b5061022a610c67565b005b34801561023857600080fd5b50610241610c7b565b60405161024e91906110cf565b60405180910390f35b34801561026357600080fd5b5061026c610c85565b604051610279919061141c565b60405180910390f35b34801561028e57600080fd5b506102a960048036038101906102a491906114d8565b610cae565b005b3480156102b757600080fd5b506102d260048036038101906102cd9190611089565b610d53565b005b3480156102e057600080fd5b506102fb60048036038101906102f69190611521565b610dd7565b005b600080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561041457600654600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461040d9190611590565b90506104b6565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156104b057600654600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546104a99190611590565b90506104b6565b60065490505b919050565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fb0606a2f8f68c18c1ea0d502e466b91285acbe11b25c1fab8487a3a2646fcd868260405161054591906110cf565b60405180910390a250565b610558610e2a565b806006819055507fd7c08c2194819919a906430c0b9c664bcb98605dbdd65eb6a4f980193c25794b8160405161058e91906110cf565b60405180910390a150565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002081905550600560003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020829080600181540180825580915050600190039060005260206000200160009091909190916101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055503373ffffffffffffffffffffffffffffffffffffffff167f6a8dc9eea18d2a35ec4fb2eff28a06bb5f9bebdfbc64d914f1e1283749c1193083836040516107029291906115e6565b60405180910390a25050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461075a9061163e565b80601f01602080910402602001604051908101604052809291908181526020018280546107869061163e565b80156107d35780601f106107a8576101008083540402835291602001916107d3565b820191906000526020600020905b8154815290600101906020018083116107b657829003601f168201915b50505050509050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461082b9061163e565b90501161086d576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610864906116cd565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546108b99061163e565b9050116108fb576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016108f290611739565b60405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610a5057600654600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610a0a9190611590565b3414610a4b576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a42906117a5565b60405180910390fd5b610b71565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020541115610b2b57600654600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054610ae59190611590565b3414610b26576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b1d906117a5565b60405180910390fd5b610b70565b6006543414610b6f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610b66906117a5565b60405180910390fd5b5b5b8073ffffffffffffffffffffffffffffffffffffffff166108fc60065434610b9991906117c5565b9081150290604051600060405180830381858888f19350505050158015610bc4573d6000803e3d6000fd5b508073ffffffffffffffffffffffffffffffffffffffff167fb3dbe9e9894ca2c11cb6c80bd0b0bccb9f5b41d612dbeeda0d5474de40b874fe3384604051610c0d92919061183d565b60405180910390a25050565b60056020528160005260406000208181548110610c3557600080fd5b906000526020600020016000915091509054906101000a900473ffffffffffffffffffffffffffffffffffffffff1681565b610c6f610e2a565b610c796000610ea8565b565b6000600654905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610d01929190610f74565b503373ffffffffffffffffffffffffffffffffffffffff167f4e870b30efba9ae7c0d99682faa885b28be1c325e56252d2a52a9a7576521e2a82604051610d48919061121c565b60405180910390a250565b610d5b610e2a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610dcb576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610dc2906118df565b60405180910390fd5b610dd481610ea8565b50565b610ddf610e2a565b8173ffffffffffffffffffffffffffffffffffffffff166108fc829081150290604051600060405180830381858888f19350505050158015610e25573d6000803e3d6000fd5b505050565b610e32610f6c565b73ffffffffffffffffffffffffffffffffffffffff16610e50610c85565b73ffffffffffffffffffffffffffffffffffffffff1614610ea6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610e9d9061194b565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610f809061163e565b90600052602060002090601f016020900481019282610fa25760008555610fe9565b82601f10610fbb57805160ff1916838001178555610fe9565b82800160010185558215610fe9579182015b82811115610fe8578251825591602001919060010190610fcd565b5b509050610ff69190610ffa565b5090565b5b80821115611013576000816000905550600101610ffb565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006110568261102b565b9050919050565b6110668161104b565b811461107157600080fd5b50565b6000813590506110838161105d565b92915050565b60006020828403121561109f5761109e611021565b5b60006110ad84828501611074565b91505092915050565b6000819050919050565b6110c9816110b6565b82525050565b60006020820190506110e460008301846110c0565b92915050565b6110f3816110b6565b81146110fe57600080fd5b50565b600081359050611110816110ea565b92915050565b60006020828403121561112c5761112b611021565b5b600061113a84828501611101565b91505092915050565b6000806040838503121561115a57611159611021565b5b600061116885828601611074565b925050602061117985828601611101565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b838110156111bd5780820151818401526020810190506111a2565b838111156111cc576000848401525b50505050565b6000601f19601f8301169050919050565b60006111ee82611183565b6111f8818561118e565b935061120881856020860161119f565b611211816111d2565b840191505092915050565b6000602082019050818103600083015261123681846111e3565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b611280826111d2565b810181811067ffffffffffffffff8211171561129f5761129e611248565b5b80604052505050565b60006112b2611017565b90506112be8282611277565b919050565b600067ffffffffffffffff8211156112de576112dd611248565b5b6112e7826111d2565b9050602081019050919050565b82818337600083830152505050565b6000611316611311846112c3565b6112a8565b90508281526020810184848401111561133257611331611243565b5b61133d8482856112f4565b509392505050565b600082601f83011261135a5761135961123e565b5b813561136a848260208601611303565b91505092915050565b600061137e8261102b565b9050919050565b61138e81611373565b811461139957600080fd5b50565b6000813590506113ab81611385565b92915050565b600080604083850312156113c8576113c7611021565b5b600083013567ffffffffffffffff8111156113e6576113e5611026565b5b6113f285828601611345565b92505060206114038582860161139c565b9150509250929050565b6114168161104b565b82525050565b6000602082019050611431600083018461140d565b92915050565b600067ffffffffffffffff82111561145257611451611248565b5b61145b826111d2565b9050602081019050919050565b600061147b61147684611437565b6112a8565b90508281526020810184848401111561149757611496611243565b5b6114a28482856112f4565b509392505050565b600082601f8301126114bf576114be61123e565b5b81356114cf848260208601611468565b91505092915050565b6000602082840312156114ee576114ed611021565b5b600082013567ffffffffffffffff81111561150c5761150b611026565b5b611518848285016114aa565b91505092915050565b6000806040838503121561153857611537611021565b5b60006115468582860161139c565b925050602061155785828601611101565b9150509250929050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b600061159b826110b6565b91506115a6836110b6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156115db576115da611561565b5b828201905092915050565b60006040820190506115fb600083018561140d565b61160860208301846110c0565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061165657607f821691505b6020821081141561166a5761166961160f565b5b50919050565b600082825260208201905092915050565b7f526563697069656e74207075626c6963206b6579206e6f742061646465640000600082015250565b60006116b7601e83611670565b91506116c282611681565b602082019050919050565b600060208201905081810360008301526116e6816116aa565b9050919050565b7f53656e646572207075626c6963206b6579206e6f742061646465640000000000600082015250565b6000611723601b83611670565b915061172e826116ed565b602082019050919050565b6000602082019050818103600083015261175281611716565b9050919050565b7f496e636f7272656374206d6573736167696e6720666565000000000000000000600082015250565b600061178f601783611670565b915061179a82611759565b602082019050919050565b600060208201905081810360008301526117be81611782565b9050919050565b60006117d0826110b6565b91506117db836110b6565b9250828210156117ee576117ed611561565b5b828203905092915050565b600081519050919050565b600061180f826117f9565b6118198185611670565b935061182981856020860161119f565b611832816111d2565b840191505092915050565b6000604082019050611852600083018561140d565b81810360208301526118648184611804565b90509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b60006118c9602683611670565b91506118d48261186d565b604082019050919050565b600060208201905081810360008301526118f8816118bc565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b6000611935602083611670565b9150611940826118ff565b602082019050919050565b6000602082019050818103600083015261196481611928565b905091905056fea2646970667358221220022fb9a8950a4a6e38461900f9954d5e5293d0e6947c958a3d55f884b7e38a9964736f6c63430008090033";

type PolyChatConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: PolyChatConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class PolyChat__factory extends ContractFactory {
  constructor(...args: PolyChatConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<PolyChat> {
    return super.deploy(overrides || {}) as Promise<PolyChat>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): PolyChat {
    return super.attach(address) as PolyChat;
  }
  override connect(signer: Signer): PolyChat__factory {
    return super.connect(signer) as PolyChat__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): PolyChatInterface {
    return new utils.Interface(_abi) as PolyChatInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): PolyChat {
    return new Contract(address, _abi, signerOrProvider) as PolyChat;
  }
}
