/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { IPFSChat, IPFSChatInterface } from "../IPFSChat";

const _abi = [
  {
    inputs: [],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_recepient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "Message",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "_messagingFee",
        type: "uint256",
      },
    ],
    name: "NewGlobalMessagingFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_messagingFee",
        type: "uint256",
      },
    ],
    name: "NewMessagingFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_publicKey",
        type: "string",
      },
    ],
    name: "NewPublicKey",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "address",
        name: "fromAccount",
        type: "address",
      },
      {
        indexed: false,
        internalType: "uint256",
        name: "_messagingFee",
        type: "uint256",
      },
    ],
    name: "NewWhitelistMessagingFee",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipTransferred",
    type: "event",
  },
  {
    inputs: [],
    name: "globalMessagingFee",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "messagingFeeFor",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "owner",
    outputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "publicKeyOf",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "sendMessageTo",
    outputs: [],
    stateMutability: "payable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newMessagingFee",
        type: "uint256",
      },
    ],
    name: "setGlobalMessagingFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "setMessagingFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_public_key",
        type: "string",
      },
    ],
    name: "setPublicKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_from",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_newFee",
        type: "uint256",
      },
    ],
    name: "setWhiteListFee",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "transferOwnership",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x60806040523480156200001157600080fd5b5062000032620000266200008160201b60201c565b6200008960201b60201c565b66038d7ea4c680006005819055507fd7c08c2194819919a906430c0b9c664bcb98605dbdd65eb6a4f980193c25794b60055460405162000073919062000168565b60405180910390a162000185565b600033905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b6000819050919050565b62000162816200014d565b82525050565b60006020820190506200017f600083018462000157565b92915050565b61165d80620001956000396000f3fe60806040526004361061009c5760003560e01c806364513e2f1161006457806364513e2f146101965780636f6fc077146101b2578063715018a6146101db57806387f977df146101f25780638da5cb5b1461021d578063f2fde38b146102485761009c565b806303fd22b6146100a157806329f8155a146100de5780634c397309146101075780635be94a70146101305780635e8af8d214610159575b600080fd5b3480156100ad57600080fd5b506100c860048036038101906100c39190610eb9565b610271565b6040516100d59190610eff565b60405180910390f35b3480156100ea57600080fd5b5061010560048036038101906101009190610f46565b61042f565b005b34801561011357600080fd5b5061012e60048036038101906101299190610f46565b6104c4565b005b34801561013c57600080fd5b5061015760048036038101906101529190610f73565b61050d565b005b34801561016557600080fd5b50610180600480360381019061017b9190610eb9565b6105e2565b60405161018d919061104c565b60405180910390f35b6101b060048036038101906101ab91906111a3565b6106b3565b005b3480156101be57600080fd5b506101d960048036038101906101d491906111ff565b610aea565b005b3480156101e757600080fd5b506101f0610b8f565b005b3480156101fe57600080fd5b50610207610ba3565b6040516102149190610eff565b60405180910390f35b34801561022957600080fd5b50610232610bad565b60405161023f9190611257565b60405180910390f35b34801561025457600080fd5b5061026f600480360381019061026a9190610eb9565b610bd6565b005b600080600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561038857600554600460008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461038191906112a1565b905061042a565b6000600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561042457600554600360008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205461041d91906112a1565b905061042a565b60055490505b919050565b80600360003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167fb0606a2f8f68c18c1ea0d502e466b91285acbe11b25c1fab8487a3a2646fcd86826040516104b99190610eff565b60405180910390a250565b6104cc610c5a565b806005819055507fd7c08c2194819919a906430c0b9c664bcb98605dbdd65eb6a4f980193c25794b816040516105029190610eff565b60405180910390a150565b80600460003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060008473ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020819055503373ffffffffffffffffffffffffffffffffffffffff167f6a8dc9eea18d2a35ec4fb2eff28a06bb5f9bebdfbc64d914f1e1283749c1193083836040516105d69291906112f7565b60405180910390a25050565b6060600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461062e9061134f565b80601f016020809104026020016040519081016040528092919081815260200182805461065a9061134f565b80156106a75780601f1061067c576101008083540402835291602001916106a7565b820191906000526020600020905b81548152906001019060200180831161068a57829003601f168201915b50505050509050919050565b6000600160008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546106ff9061134f565b905011610741576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610738906113cd565b60405180910390fd5b6000600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020805461078d9061134f565b9050116107cf576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016107c690611439565b60405180910390fd5b6000600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002054111561092457600554600460008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546108de91906112a1565b341461091f576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610916906114a5565b60405180910390fd5b610a45565b6000600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000205411156109ff57600554600360008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020546109b991906112a1565b34146109fa576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016109f1906114a5565b60405180910390fd5b610a44565b6005543414610a43576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610a3a906114a5565b60405180910390fd5b5b5b60008190508073ffffffffffffffffffffffffffffffffffffffff166108fc60055434610a7291906114c5565b9081150290604051600060405180830381858888f19350505050610a9557600080fd5b8173ffffffffffffffffffffffffffffffffffffffff167fb3dbe9e9894ca2c11cb6c80bd0b0bccb9f5b41d612dbeeda0d5474de40b874fe3385604051610add9291906114f9565b60405180910390a2505050565b80600160003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000209080519060200190610b3d929190610da4565b503373ffffffffffffffffffffffffffffffffffffffff167f49ffdafd71753c936dee780812bcc301cb26af756780242d05938753e420ef2282604051610b84919061104c565b60405180910390a250565b610b97610c5a565b610ba16000610cd8565b565b6000600554905090565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff16905090565b610bde610c5a565b600073ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff161415610c4e576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610c459061159b565b60405180910390fd5b610c5781610cd8565b50565b610c62610d9c565b73ffffffffffffffffffffffffffffffffffffffff16610c80610bad565b73ffffffffffffffffffffffffffffffffffffffff1614610cd6576040517f08c379a0000000000000000000000000000000000000000000000000000000008152600401610ccd90611607565b60405180910390fd5b565b60008060009054906101000a900473ffffffffffffffffffffffffffffffffffffffff169050816000806101000a81548173ffffffffffffffffffffffffffffffffffffffff021916908373ffffffffffffffffffffffffffffffffffffffff1602179055508173ffffffffffffffffffffffffffffffffffffffff168173ffffffffffffffffffffffffffffffffffffffff167f8be0079c531659141344cd1fd0a4f28419497f9722a3daafe3b4186f6b6457e060405160405180910390a35050565b600033905090565b828054610db09061134f565b90600052602060002090601f016020900481019282610dd25760008555610e19565b82601f10610deb57805160ff1916838001178555610e19565b82800160010185558215610e19579182015b82811115610e18578251825591602001919060010190610dfd565b5b509050610e269190610e2a565b5090565b5b80821115610e43576000816000905550600101610e2b565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b6000610e8682610e5b565b9050919050565b610e9681610e7b565b8114610ea157600080fd5b50565b600081359050610eb381610e8d565b92915050565b600060208284031215610ecf57610ece610e51565b5b6000610edd84828501610ea4565b91505092915050565b6000819050919050565b610ef981610ee6565b82525050565b6000602082019050610f146000830184610ef0565b92915050565b610f2381610ee6565b8114610f2e57600080fd5b50565b600081359050610f4081610f1a565b92915050565b600060208284031215610f5c57610f5b610e51565b5b6000610f6a84828501610f31565b91505092915050565b60008060408385031215610f8a57610f89610e51565b5b6000610f9885828601610ea4565b9250506020610fa985828601610f31565b9150509250929050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610fed578082015181840152602081019050610fd2565b83811115610ffc576000848401525b50505050565b6000601f19601f8301169050919050565b600061101e82610fb3565b6110288185610fbe565b9350611038818560208601610fcf565b61104181611002565b840191505092915050565b600060208201905081810360008301526110668184611013565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b6110b082611002565b810181811067ffffffffffffffff821117156110cf576110ce611078565b5b80604052505050565b60006110e2610e47565b90506110ee82826110a7565b919050565b600067ffffffffffffffff82111561110e5761110d611078565b5b61111782611002565b9050602081019050919050565b82818337600083830152505050565b6000611146611141846110f3565b6110d8565b90508281526020810184848401111561116257611161611073565b5b61116d848285611124565b509392505050565b600082601f83011261118a5761118961106e565b5b813561119a848260208601611133565b91505092915050565b600080604083850312156111ba576111b9610e51565b5b600083013567ffffffffffffffff8111156111d8576111d7610e56565b5b6111e485828601611175565b92505060206111f585828601610ea4565b9150509250929050565b60006020828403121561121557611214610e51565b5b600082013567ffffffffffffffff81111561123357611232610e56565b5b61123f84828501611175565b91505092915050565b61125181610e7b565b82525050565b600060208201905061126c6000830184611248565b92915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052601160045260246000fd5b60006112ac82610ee6565b91506112b783610ee6565b9250827fffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffffff038211156112ec576112eb611272565b5b828201905092915050565b600060408201905061130c6000830185611248565b6113196020830184610ef0565b9392505050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061136757607f821691505b6020821081141561137b5761137a611320565b5b50919050565b7f526563697069656e74207075626c6963206b6579206e6f742061646465640000600082015250565b60006113b7601e83610fbe565b91506113c282611381565b602082019050919050565b600060208201905081810360008301526113e6816113aa565b9050919050565b7f53656e646572207075626c6963206b6579206e6f742061646465640000000000600082015250565b6000611423601b83610fbe565b915061142e826113ed565b602082019050919050565b6000602082019050818103600083015261145281611416565b9050919050565b7f496e636f7272656374206d6573736167696e6720666565000000000000000000600082015250565b600061148f601783610fbe565b915061149a82611459565b602082019050919050565b600060208201905081810360008301526114be81611482565b9050919050565b60006114d082610ee6565b91506114db83610ee6565b9250828210156114ee576114ed611272565b5b828203905092915050565b600060408201905061150e6000830185611248565b81810360208301526115208184611013565b90509392505050565b7f4f776e61626c653a206e6577206f776e657220697320746865207a65726f206160008201527f6464726573730000000000000000000000000000000000000000000000000000602082015250565b6000611585602683610fbe565b915061159082611529565b604082019050919050565b600060208201905081810360008301526115b481611578565b9050919050565b7f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572600082015250565b60006115f1602083610fbe565b91506115fc826115bb565b602082019050919050565b60006020820190508181036000830152611620816115e4565b905091905056fea264697066735822122000cd45c706509309f33c723a732c54e0826af6d4dbeba26408c5cbd6fb75de9764736f6c63430008090033";

type IPFSChatConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IPFSChatConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IPFSChat__factory extends ContractFactory {
  constructor(...args: IPFSChatConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IPFSChat> {
    return super.deploy(overrides || {}) as Promise<IPFSChat>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IPFSChat {
    return super.attach(address) as IPFSChat;
  }
  override connect(signer: Signer): IPFSChat__factory {
    return super.connect(signer) as IPFSChat__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IPFSChatInterface {
    return new utils.Interface(_abi) as IPFSChatInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPFSChat {
    return new Contract(address, _abi, signerOrProvider) as IPFSChat;
  }
}
