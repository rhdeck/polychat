/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { IPFSChat, IPFSChatInterface } from "../IPFSChat";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_recepient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "Message",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "messageCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "publicKeyOf",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "publicKeys",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "sendMessageTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_public_key",
        type: "string",
      },
    ],
    name: "setPublicKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610930806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806339d524181461005c5780635e8af8d21461008c57806364513e2f146100bc5780636f6fc077146100d8578063a3d6f9a9146100f4575b600080fd5b610076600480360381019061007191906104f8565b610124565b604051610083919061053e565b60405180910390f35b6100a660048036038101906100a191906104f8565b61013c565b6040516100b391906105f2565b60405180910390f35b6100d660048036038101906100d19190610749565b61020c565b005b6100f260048036038101906100ed91906107a5565b6102ed565b005b61010e600480360381019061010991906104f8565b610343565b60405161011b91906105f2565b60405180910390f35b60026020528060005260406000206000915090505481565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546101879061081d565b80601f01602080910402602001604051908101604052809291908181526020018280546101b39061081d565b80156102005780601f106101d557610100808354040283529160200191610200565b820191906000526020600020905b8154815290600101906020018083116101e357829003601f168201915b50505050509050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546102579061081d565b905011610299576040517f08c379a00000000000000000000000000000000000000000000000000000000081526004016102909061089b565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff167fb3dbe9e9894ca2c11cb6c80bd0b0bccb9f5b41d612dbeeda0d5474de40b874fe33846040516102e19291906108ca565b60405180910390a25050565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff168152602001908152602001600020908051906020019061033f9291906103e3565b5050565b600060205280600052604060002060009150905080546103629061081d565b80601f016020809104026020016040519081016040528092919081815260200182805461038e9061081d565b80156103db5780601f106103b0576101008083540402835291602001916103db565b820191906000526020600020905b8154815290600101906020018083116103be57829003601f168201915b505050505081565b8280546103ef9061081d565b90600052602060002090601f0160209004810192826104115760008555610458565b82601f1061042a57805160ff1916838001178555610458565b82800160010185558215610458579182015b8281111561045757825182559160200191906001019061043c565b5b5090506104659190610469565b5090565b5b8082111561048257600081600090555060010161046a565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006104c58261049a565b9050919050565b6104d5816104ba565b81146104e057600080fd5b50565b6000813590506104f2816104cc565b92915050565b60006020828403121561050e5761050d610490565b5b600061051c848285016104e3565b91505092915050565b6000819050919050565b61053881610525565b82525050565b6000602082019050610553600083018461052f565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b83811015610593578082015181840152602081019050610578565b838111156105a2576000848401525b50505050565b6000601f19601f8301169050919050565b60006105c482610559565b6105ce8185610564565b93506105de818560208601610575565b6105e7816105a8565b840191505092915050565b6000602082019050818103600083015261060c81846105b9565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b610656826105a8565b810181811067ffffffffffffffff821117156106755761067461061e565b5b80604052505050565b6000610688610486565b9050610694828261064d565b919050565b600067ffffffffffffffff8211156106b4576106b361061e565b5b6106bd826105a8565b9050602081019050919050565b82818337600083830152505050565b60006106ec6106e784610699565b61067e565b90508281526020810184848401111561070857610707610619565b5b6107138482856106ca565b509392505050565b600082601f8301126107305761072f610614565b5b81356107408482602086016106d9565b91505092915050565b600080604083850312156107605761075f610490565b5b600083013567ffffffffffffffff81111561077e5761077d610495565b5b61078a8582860161071b565b925050602061079b858286016104e3565b9150509250929050565b6000602082840312156107bb576107ba610490565b5b600082013567ffffffffffffffff8111156107d9576107d8610495565b5b6107e58482850161071b565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061083557607f821691505b60208210811415610849576108486107ee565b5b50919050565b7f5075626c6963206b6579206e6f74206164646564000000000000000000000000600082015250565b6000610885601483610564565b91506108908261084f565b602082019050919050565b600060208201905081810360008301526108b481610878565b9050919050565b6108c4816104ba565b82525050565b60006040820190506108df60008301856108bb565b81810360208301526108f181846105b9565b9050939250505056fea2646970667358221220b1db87f853c469ab5abefb4fceca86187cd69a0430e57f8dabd944e5e951b67564736f6c63430008090033";

type IPFSChatConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IPFSChatConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IPFSChat__factory extends ContractFactory {
  constructor(...args: IPFSChatConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IPFSChat> {
    return super.deploy(overrides || {}) as Promise<IPFSChat>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IPFSChat {
    return super.attach(address) as IPFSChat;
  }
  override connect(signer: Signer): IPFSChat__factory {
    return super.connect(signer) as IPFSChat__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IPFSChatInterface {
    return new utils.Interface(_abi) as IPFSChatInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPFSChat {
    return new Contract(address, _abi, signerOrProvider) as IPFSChat;
  }
}
