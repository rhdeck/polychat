/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */
import { Signer, utils, Contract, ContractFactory, Overrides } from "ethers";
import type { Provider, TransactionRequest } from "@ethersproject/providers";
import type { PromiseOrValue } from "../common";
import type { IPFSChat, IPFSChatInterface } from "../IPFSChat";

const _abi = [
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "_sender",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "_recepient",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_message",
        type: "string",
      },
    ],
    name: "Message",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "_account",
        type: "address",
      },
      {
        indexed: false,
        internalType: "string",
        name: "_publicKey",
        type: "string",
      },
    ],
    name: "NewPublicKey",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "messageCount",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "publicKeyOf",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "publicKeys",
    outputs: [
      {
        internalType: "string",
        name: "",
        type: "string",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_message",
        type: "string",
      },
      {
        internalType: "address",
        name: "_address",
        type: "address",
      },
    ],
    name: "sendMessageTo",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "string",
        name: "_public_key",
        type: "string",
      },
    ],
    name: "setPublicKey",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
];

const _bytecode =
  "0x608060405234801561001057600080fd5b50610a77806100206000396000f3fe608060405234801561001057600080fd5b50600436106100575760003560e01c806339d524181461005c5780635e8af8d21461008c57806364513e2f146100bc5780636f6fc077146100d8578063a3d6f9a9146100f4575b600080fd5b610076600480360381019061007191906105d3565b610124565b6040516100839190610619565b60405180910390f35b6100a660048036038101906100a191906105d3565b61013c565b6040516100b391906106cd565b60405180910390f35b6100d660048036038101906100d19190610824565b61020c565b005b6100f260048036038101906100ed9190610880565b61037a565b005b61010e600480360381019061010991906105d3565b61041e565b60405161011b91906106cd565b60405180910390f35b60026020528060005260406000206000915090505481565b60606000808373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054610187906108f8565b80601f01602080910402602001604051908101604052809291908181526020018280546101b3906108f8565b80156102005780601f106101d557610100808354040283529160200191610200565b820191906000526020600020905b8154815290600101906020018083116101e357829003601f168201915b50505050509050919050565b60008060008373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff1681526020019081526020016000208054610257906108f8565b905011610299576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161029090610976565b60405180910390fd5b60008060003373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002080546102e4906108f8565b905011610326576040517f08c379a000000000000000000000000000000000000000000000000000000000815260040161031d906109e2565b60405180910390fd5b8073ffffffffffffffffffffffffffffffffffffffff167fb3dbe9e9894ca2c11cb6c80bd0b0bccb9f5b41d612dbeeda0d5474de40b874fe338460405161036e929190610a11565b60405180910390a25050565b806000803373ffffffffffffffffffffffffffffffffffffffff1673ffffffffffffffffffffffffffffffffffffffff16815260200190815260200160002090805190602001906103cc9291906104be565b503373ffffffffffffffffffffffffffffffffffffffff167f49ffdafd71753c936dee780812bcc301cb26af756780242d05938753e420ef228260405161041391906106cd565b60405180910390a250565b6000602052806000526040600020600091509050805461043d906108f8565b80601f0160208091040260200160405190810160405280929190818152602001828054610469906108f8565b80156104b65780601f1061048b576101008083540402835291602001916104b6565b820191906000526020600020905b81548152906001019060200180831161049957829003601f168201915b505050505081565b8280546104ca906108f8565b90600052602060002090601f0160209004810192826104ec5760008555610533565b82601f1061050557805160ff1916838001178555610533565b82800160010185558215610533579182015b82811115610532578251825591602001919060010190610517565b5b5090506105409190610544565b5090565b5b8082111561055d576000816000905550600101610545565b5090565b6000604051905090565b600080fd5b600080fd5b600073ffffffffffffffffffffffffffffffffffffffff82169050919050565b60006105a082610575565b9050919050565b6105b081610595565b81146105bb57600080fd5b50565b6000813590506105cd816105a7565b92915050565b6000602082840312156105e9576105e861056b565b5b60006105f7848285016105be565b91505092915050565b6000819050919050565b61061381610600565b82525050565b600060208201905061062e600083018461060a565b92915050565b600081519050919050565b600082825260208201905092915050565b60005b8381101561066e578082015181840152602081019050610653565b8381111561067d576000848401525b50505050565b6000601f19601f8301169050919050565b600061069f82610634565b6106a9818561063f565b93506106b9818560208601610650565b6106c281610683565b840191505092915050565b600060208201905081810360008301526106e78184610694565b905092915050565b600080fd5b600080fd5b7f4e487b7100000000000000000000000000000000000000000000000000000000600052604160045260246000fd5b61073182610683565b810181811067ffffffffffffffff821117156107505761074f6106f9565b5b80604052505050565b6000610763610561565b905061076f8282610728565b919050565b600067ffffffffffffffff82111561078f5761078e6106f9565b5b61079882610683565b9050602081019050919050565b82818337600083830152505050565b60006107c76107c284610774565b610759565b9050828152602081018484840111156107e3576107e26106f4565b5b6107ee8482856107a5565b509392505050565b600082601f83011261080b5761080a6106ef565b5b813561081b8482602086016107b4565b91505092915050565b6000806040838503121561083b5761083a61056b565b5b600083013567ffffffffffffffff81111561085957610858610570565b5b610865858286016107f6565b9250506020610876858286016105be565b9150509250929050565b6000602082840312156108965761089561056b565b5b600082013567ffffffffffffffff8111156108b4576108b3610570565b5b6108c0848285016107f6565b91505092915050565b7f4e487b7100000000000000000000000000000000000000000000000000000000600052602260045260246000fd5b6000600282049050600182168061091057607f821691505b60208210811415610924576109236108c9565b5b50919050565b7f526563697069656e74207075626c6963206b6579206e6f742061646465640000600082015250565b6000610960601e8361063f565b915061096b8261092a565b602082019050919050565b6000602082019050818103600083015261098f81610953565b9050919050565b7f53656e646572207075626c6963206b6579206e6f742061646465640000000000600082015250565b60006109cc601b8361063f565b91506109d782610996565b602082019050919050565b600060208201905081810360008301526109fb816109bf565b9050919050565b610a0b81610595565b82525050565b6000604082019050610a266000830185610a02565b8181036020830152610a388184610694565b9050939250505056fea26469706673582212206b176c85667103ef2141a80d0a0878675697085fc0026885a98420fd0ea5acb564736f6c63430008090033";

type IPFSChatConstructorParams =
  | [signer?: Signer]
  | ConstructorParameters<typeof ContractFactory>;

const isSuperArgs = (
  xs: IPFSChatConstructorParams
): xs is ConstructorParameters<typeof ContractFactory> => xs.length > 1;

export class IPFSChat__factory extends ContractFactory {
  constructor(...args: IPFSChatConstructorParams) {
    if (isSuperArgs(args)) {
      super(...args);
    } else {
      super(_abi, _bytecode, args[0]);
    }
  }

  override deploy(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): Promise<IPFSChat> {
    return super.deploy(overrides || {}) as Promise<IPFSChat>;
  }
  override getDeployTransaction(
    overrides?: Overrides & { from?: PromiseOrValue<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(overrides || {});
  }
  override attach(address: string): IPFSChat {
    return super.attach(address) as IPFSChat;
  }
  override connect(signer: Signer): IPFSChat__factory {
    return super.connect(signer) as IPFSChat__factory;
  }

  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): IPFSChatInterface {
    return new utils.Interface(_abi) as IPFSChatInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): IPFSChat {
    return new Contract(address, _abi, signerOrProvider) as IPFSChat;
  }
}
